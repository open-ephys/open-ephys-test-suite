name: Windows

on: 
  push:

jobs:
  test-suite:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: Start Windows Audio Engine
        run: net start audiosrv
      - name: Install Scream
        shell: powershell
        run: |
          Start-Service audio*
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.6/Scream3.6.zip -OutFile C:\Scream3.6.zip
          Expand-7ZipArchive -Path C:\Scream3.6.zip -DestinationPath C:\Scream
          $cert = (Get-AuthenticodeSignature C:\Scream\Install\driver\Scream.sys).SignerCertificate
          $store = [System.Security.Cryptography.X509Certificates.X509Store]::new("TrustedPublisher", "LocalMachine")
          $store.Open("ReadWrite")
          $store.Add($cert)
          $store.Close()
          cd C:\Scream\Install\driver
          C:\Scream\Install\helpers\devcon install Scream.inf *Scream
      - name: Show audio device
        run: Get-CimInstance Win32_SoundDevice | fl *
      - name: Download GUI
        shell: powershell
        run: |
          Invoke-WebRequest https://openephys.jfrog.io/artifactory/GUI-binaries/Release/windows/open-ephys-v1.0.1-windows.zip -OutFile C:\open-ephys.zip
          Expand-7ZipArchive -Path C:\open-ephys.zip -DestinationPath C:\
          git clone --branch development https://github.com/open-ephys/plugin-GUI.git C:\plugin-GUI
          cd C:\plugin-GUI\Build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          New-Item -Path 'C:\plugin-GUI\Build\Release' -ItemType Directory
          Copy-Item -Path 'C:\open-ephys\*' -Destination 'C:\plugin-GUI\Build\Release' -Recurse -Force
          New-Item -Path 'C:\open-ephys\data' -ItemType Directory
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install plugins
        shell: powershell
        run: |
          New-Item -Path 'C:\OEPlugins' -ItemType Directory
          git clone --branch main https://github.com/open-ephys-plugins/open-ephys-data-format.git C:\OEPlugins\open-ephys-data-format
          cd C:\OEPlugins\open-ephys-data-format\Build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          msbuild INSTALL.vcxproj -p:Configuration=Release -p:Platform=x64
          git clone --branch main https://github.com/open-ephys-plugins/OpenEphysHDF5Lib.git C:\OEPlugins\OpenEphysHDF5Lib
          cd C:\OEPlugins\OpenEphysHDF5Lib\Build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          msbuild INSTALL.vcxproj -p:Configuration=Release -p:Platform=x64
          git clone --branch main https://github.com/open-ephys-plugins/nwb-format.git C:\OEPlugins\nwb-format
          cd C:\OEPlugins\nwb-format\Build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          msbuild INSTALL.vcxproj -p:Configuration=Release -p:Platform=x64
      - name: Install test-suite
        shell: powershell
        run: |
          git clone --branch juce8 https://github.com/open-ephys/open-ephys-python-tools.git C:\open-ephys-python-tools
          cd C:\open-ephys-python-tools
          pip install -e .
          pip install psutil
      - name: Run Tests
        shell: powershell
        run: |
          $process = Start-Process -FilePath "C:\plugin-GUI\Build\Release\open-ephys.exe" -ArgumentList "C:\plugin-GUI\Build\Release\configs\file_reader_config.xml" -NoNewWindow -PassThru
          Write-Host "Started open-ephys process with ID: $($process.Id)"
          Start-Sleep -Seconds 20
          Write-Host "Starting Python script..."
          python run_all.py 2>&1 | Tee-Object -FilePath "python_output.log"
          Write-Host "Python script completed. Output saved to python_output.log"
          Stop-Process -Id $process.Id -Force
        env:
          OE_WINDOWS_GITHUB_RECORD_PATH: C:\open-ephys\data
      - name: Set timestamp
        shell: powershell
        id: timestamp
        run: |
          $timestamp = Get-Date -Format 'yyyy_MM_dd_HH_mm_ss'
          "timestamp=$timestamp" >> $env:GITHUB_OUTPUT
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: windows_${{ steps.timestamp.outputs.timestamp }}.log
          path: python_output.log
          retention-days: 7